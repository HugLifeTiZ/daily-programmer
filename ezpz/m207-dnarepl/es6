#!/usr/bin/env node
require("traceur");
require("sugar");
var pairs = {
  "T": "A",
  "C": "G",
  "A": "T",
  "G": "C"
};
var codons = {
  "TTT": "Phe",
  "TTC": "Phe",
  "TTA": "Leu",
  "TTG": "Leu",
  "CTT": "Leu",
  "CTC": "Leu",
  "CTA": "Leu",
  "CTG": "Leu",
  "ATT": "Ile",
  "ATC": "Ile",
  "ATA": "Ile",
  "ATG": "Met",
  "GTT": "Val",
  "GTC": "Val",
  "GTA": "Val",
  "GTG": "Val",
  "TCT": "Ser",
  "TCC": "Ser",
  "TCA": "Ser",
  "TCG": "Ser",
  "CCT": "Pro",
  "CCC": "Pro",
  "CCA": "Pro",
  "CCG": "Pro",
  "ACT": "Thr",
  "ACC": "Thr",
  "ACA": "Thr",
  "ACG": "Thr",
  "GCT": "Ala",
  "GCC": "Ala",
  "GCA": "Ala",
  "GCG": "Ala",
  "TAT": "Tyr",
  "TAC": "Tyr",
  "TAA": "STOP",
  "TAG": "STOP",
  "CAT": "His",
  "CAC": "His",
  "CAA": "Gln",
  "CAG": "Gln",
  "AAT": "Asn",
  "AAC": "Asn",
  "AAA": "Lys",
  "AAG": "Lys",
  "GAT": "Asp",
  "GAC": "Asp",
  "GAA": "Glu",
  "GAG": "Glu",
  "TGT": "Cys",
  "TGC": "Cys",
  "TGA": "STOP",
  "TGG": "Trp",
  "CGT": "Arg",
  "CGC": "Arg",
  "CGA": "Arg",
  "CGG": "Arg",
  "AGT": "Ser",
  "AGC": "Ser",
  "AGA": "Arg",
  "AGG": "Arg",
  "GGT": "Gly",
  "GGC": "Gly",
  "GGA": "Gly",
  "GGG": "Gly"
};
half1 = process.argv.from(2).map("toUpperCase");
if (!half1.all(/^[ATGC]$/)) {
  console.log("Invalid DNA sequence.");
  process.exit(1);
}
half2 = half1.map((function(i) {
  return pairs[$traceurRuntime.toProperty(i)];
}));
console.log(half1.join(" ") + "\n" + half2.join(" "));
proteins = half1.inGroupsOf(3).map((function(i) {
  return codons[$traceurRuntime.toProperty(i.join(""))];
}));
console.log(proteins.first() == "Met" && proteins.last() == "STOP" ? proteins.join(" ") : "This DNA does not make a valid protein sequence.");
